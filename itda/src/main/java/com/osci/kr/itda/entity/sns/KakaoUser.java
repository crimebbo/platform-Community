package com.osci.kr.itda.entity.sns;import com.fasterxml.jackson.annotation.JsonCreator;import com.fasterxml.jackson.annotation.JsonProperty;import lombok.AccessLevel;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.UpdateTimestamp;import org.springframework.hateoas.RepresentationModel;import javax.persistence.*;import java.time.LocalDateTime;@Data@NoArgsConstructor(access = AccessLevel.PUBLIC)@Entity(name="tbl_kakao_user")@Table(uniqueConstraints = @UniqueConstraint(columnNames = {"userid" }),        indexes = {@Index(columnList="userid")})public class KakaoUser extends RepresentationModel<KakaoUser> {    @Id    @GeneratedValue(strategy= GenerationType.IDENTITY)    @Column(length = 11, nullable = false)    private Long kaid;    @Column(length = 100, nullable = false)    private String userid;    @Column(length = 255, nullable = true)    private String email;    @Column(columnDefinition = "TEXT", nullable = true)    private String accesstoken;    @Column(length = 255, nullable = false)    private String name;    @Column(columnDefinition = "TEXT", nullable = true)    private String profileimage;    @Column(length = 255, nullable = false)    private String nickname;    @Column(length = 255, nullable = false)    private String token_type;    @Column(length = 100, nullable = true)    private String expires_in;    @Column(length = 100, nullable = true)    private String refresh_token_expires_in;    @Column(columnDefinition = "TEXT", nullable = true)    private String thumbnail_image_url;    @Column(columnDefinition = "TEXT", nullable = true)    private String RefreshToken;    @Column(length = 255, nullable = false)    private Boolean profile_needs_agreement;    @Column(length = 255, nullable = true)    private String gender;    @CreationTimestamp    private LocalDateTime registerdatetime;    @UpdateTimestamp    private LocalDateTime registerUpdatetime;    @Builder    @JsonCreator    private KakaoUser(@JsonProperty("kaid") Long kaid, @JsonProperty("userid") String userid , @JsonProperty("email") String email            , @JsonProperty("accesstoken") String accesstoken , @JsonProperty("name") String name , @JsonProperty("profileimage") String profileimage            , @JsonProperty("nickname") String nickname , @JsonProperty("thumbnail_image_url") String thumbnail_image_url            , @JsonProperty("RefreshToken") String RefreshToken , @JsonProperty("profile_needs_agreement") Boolean profile_needs_agreement            , @JsonProperty("gender") String gender, @JsonProperty("token_type") String token_type , @JsonProperty("expires_in") String expires_in            , @JsonProperty("refresh_token_expires_in") String refresh_token_expires_in ,@JsonProperty("registerdatetime") LocalDateTime registerdatetime,                      @JsonProperty("registerUpdatetime") LocalDateTime registerUpdatetime){        this.kaid = kaid;        this.userid = userid;        this.email = email;        this.name = name;        this.accesstoken = accesstoken;        this.profileimage = profileimage;        this.nickname = nickname;        this.thumbnail_image_url = thumbnail_image_url;        this.RefreshToken = RefreshToken;        this.profile_needs_agreement = profile_needs_agreement;        this.gender = gender;        this.token_type = token_type;        this.expires_in = expires_in;        this.refresh_token_expires_in =refresh_token_expires_in;        this.registerdatetime =registerdatetime;        this.registerUpdatetime =registerUpdatetime;    }}