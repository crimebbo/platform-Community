package com.osci.kr.itda.controller;import com.osci.kr.itda.common.controller.ItDaBaseController;import com.osci.kr.itda.common.exception.ItDaExceptionHandler;import com.osci.kr.itda.common.model.ItDaResult;import com.osci.kr.itda.serviceimpl.CommunityServiceImpl;import com.osci.kr.itda.serviceimpl.NotiServiceImpl;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import javax.servlet.http.HttpServletRequest;@CrossOrigin(origins = "*" ,allowedHeaders = "*")@RestController@RequestMapping("/rest/api/v1/noti")public class NotiController extends ItDaBaseController {    private final Logger logger = LoggerFactory.getLogger(this.getClass());    @Autowired    private HttpServletRequest req;    @Autowired    private NotiServiceImpl notiService;    /**     * 알림 조회     * @return     * @throws ItDaExceptionHandler     */    @CrossOrigin(origins = "*" ,allowedHeaders = "*")    @GetMapping(value = "/selectAlarm/{userid}", produces = { MediaType.APPLICATION_JSON_VALUE })    public ResponseEntity<ItDaResult> selectAlarm(@PathVariable(value = "userid") String userid) throws ItDaExceptionHandler {        ItDaResult result = new ItDaResult();        try{            result = notiService.selectAlarm(userid);            result.setResultMsg("SUCCESS");            result.setResultCode(201);        }catch (Exception e){            result.setResultCode(400);            result.setResultMsg("fail Reason ::::: " + e.getMessage());        }        return new ResponseEntity<ItDaResult>(result, HttpStatus.CREATED);    }    /**     * 알림 클릭     * @return     * @throws ItDaExceptionHandler     */    @CrossOrigin(origins = "*" ,allowedHeaders = "*")    @GetMapping(value = "/clickAlarm/{notiid}/{userid}", produces = { MediaType.APPLICATION_JSON_VALUE })    public ResponseEntity<ItDaResult> clickAlarm(@PathVariable(value = "notiid") Long notiid,                                                 @PathVariable(value = "userid") String userid) throws ItDaExceptionHandler {        ItDaResult result = new ItDaResult();        try{            result = notiService.clickAlarm(notiid,userid);            result.setResultMsg("SUCCESS");            result.setResultCode(201);        }catch (Exception e){            result.setResultCode(400);            result.setResultMsg("fail Reason ::::: " + e.getMessage());        }        return new ResponseEntity<ItDaResult>(result, HttpStatus.CREATED);    }}