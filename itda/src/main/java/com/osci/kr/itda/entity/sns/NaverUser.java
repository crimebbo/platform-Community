package com.osci.kr.itda.entity.sns;import com.fasterxml.jackson.annotation.JsonCreator;import com.fasterxml.jackson.annotation.JsonProperty;import lombok.AccessLevel;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.UpdateTimestamp;import org.springframework.hateoas.RepresentationModel;import javax.persistence.*;import java.time.LocalDateTime;@Data@NoArgsConstructor(access = AccessLevel.PUBLIC)@Entity(name="tbl_naver_user")@Table(uniqueConstraints = @UniqueConstraint(columnNames = {"userid" }),        indexes = {@Index(columnList="userid")})public class NaverUser extends RepresentationModel<NaverUser> {    @Id    @GeneratedValue(strategy= GenerationType.IDENTITY)    @Column(length = 11, nullable = false)    private Long nid;    @Column(length = 100, nullable = false)    private String userid;    @Column(length = 255, nullable = true)    private String email;    @Column(columnDefinition = "TEXT", nullable = true)    private String accesstoken;    @Column(length = 255, nullable = true)    private String tokenexpire;    @Column(length = 255, nullable = true)    private String name;    @Column(length = 255, nullable = true)    private String nickname;    @Column(columnDefinition = "TEXT", nullable = true)    private String profile_image;    @Column(length = 255, nullable = true)    private String gender;    @Column(length = 100, nullable = true)    private String age;    @Column(length = 100, nullable = true)    private String birthday;    @CreationTimestamp    private LocalDateTime registerdatetime;    @UpdateTimestamp    private LocalDateTime registerUpdatetime;    @Builder    @JsonCreator    private NaverUser(@JsonProperty("nid") Long nid, @JsonProperty("userid") String userid , @JsonProperty("email") String email            , @JsonProperty("accesstoken") String accesstoken , @JsonProperty("tokenexpire") String tokenexpire , @JsonProperty("name") String name            , @JsonProperty("profile_image") String profile_image , @JsonProperty("gender") String gender , @JsonProperty("nickname") String nickname            , @JsonProperty("age") String age , @JsonProperty("birthday") String birthday ,@JsonProperty("registerdatetime") LocalDateTime registerdatetime,                      @JsonProperty("registerUpdatetime") LocalDateTime registerUpdatetime){        this.nid = nid;        this.userid = userid;        this.email = email;        this.name = name;        this.accesstoken = accesstoken;        this.tokenexpire = tokenexpire;        this.name = name;        this.profile_image = profile_image;        this.gender = gender;        this.age = age;        this.birthday = birthday;        this.registerdatetime =registerdatetime;        this.registerUpdatetime = registerUpdatetime;        this.nickname = nickname;    }}