package com.osci.kr.itda.entity.sns;import com.fasterxml.jackson.annotation.JsonCreator;import com.fasterxml.jackson.annotation.JsonProperty;import lombok.AccessLevel;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.UpdateTimestamp;import org.springframework.hateoas.RepresentationModel;import javax.persistence.*;import java.time.LocalDateTime;@Data@NoArgsConstructor(access = AccessLevel.PUBLIC)@Entity(name="tbl_google_user")@Table(uniqueConstraints = @UniqueConstraint(columnNames = {"userid" }),        indexes = {@Index(columnList="userid")})public class GoogleUser extends RepresentationModel<GoogleUser> {    @Id    @GeneratedValue(strategy= GenerationType.IDENTITY)    @Column(length = 11, nullable = false)    private Long gid;    @Column(length = 100, nullable = false)    private String userid;    @Column(length = 255, nullable = false)    private String email;    @Column(columnDefinition = "TEXT", nullable = true)    private String accesstoken;    @Column(length = 255, nullable = false)    private String familyname;    @Column(columnDefinition = "TEXT", nullable = true)    private String profileurl;    @Column(length = 255, nullable = true)    private String id;    @Column(length = 255, nullable = true)    private String givenname;    @Column(length = 255, nullable = true)    private String name;    @Column(columnDefinition = "TEXT", nullable = true)    private String tokenId;    @Column(length = 255, nullable = true)    private String token_type;    @Column(length = 100, nullable = true)    private Long expires_at;    @Column(length = 100, nullable = true)    private int expires_in;    @CreationTimestamp    private LocalDateTime registerdatetime;    @UpdateTimestamp    private LocalDateTime registerUpdatetime;    @Builder    @JsonCreator    private GoogleUser(@JsonProperty("gid") Long gid, @JsonProperty("userid") String userid , @JsonProperty("email") String email            , @JsonProperty("accesstoken") String accesstoken , @JsonProperty("familyname") String familyname , @JsonProperty("profileurl") String profileurl            , @JsonProperty("id") String id , @JsonProperty("givenname") String givenname , @JsonProperty("name") String name            , @JsonProperty("tokenId") String tokenId, @JsonProperty("token_type") String token_type , @JsonProperty("expires_at") Long expires_at            , @JsonProperty("expires_in") int expires_in , @JsonProperty("registerdatetime") LocalDateTime registerdatetime            , @JsonProperty("registerUpdatetime") LocalDateTime registerUpdatetime){        this.gid = gid;        this.userid = userid;        this.email = email;        this.userid = userid;        this.accesstoken = accesstoken;        this.familyname = familyname;        this.profileurl = profileurl;        this.id = id;        this.givenname = givenname;        this.name =name;        this.token_type = token_type;        this.tokenId = tokenId;        this.expires_at =expires_at;        this.expires_in = expires_in;        this.registerdatetime = registerdatetime;        this.registerUpdatetime =registerUpdatetime;    }}