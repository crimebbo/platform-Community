package com.osci.kr.itda.entity;import com.fasterxml.jackson.annotation.JsonCreator;import com.fasterxml.jackson.annotation.JsonProperty;import lombok.AccessLevel;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;import org.hibernate.annotations.CreationTimestamp;import org.springframework.hateoas.RepresentationModel;import javax.persistence.*;import java.time.LocalDateTime;/** * 게시글 테이블 */@Data@NoArgsConstructor(access = AccessLevel.PUBLIC)@Entity(name="tbl_board")@Table(indexes = {@Index(columnList="userid"),        @Index(columnList="nickname"), @Index(columnList="regType"), @Index(columnList="ynDel"),        @Index(columnList="commentCount"), @Index(columnList="likeCount"),@Index(columnList="title") })public class Board  extends RepresentationModel<Board> {    @Id    @GeneratedValue(strategy= GenerationType.IDENTITY)    @Column(length = 11, nullable = false)    private Long num;    @Column(length = 11, nullable = true)    private Long memid;    @Column(length = 100, nullable = false)    private String userid;    @Column(length = 255, nullable = false)    private String nickname;    @Column(length = 10, nullable = true)    private int reply;    @Column(length = 255, nullable = false)    private String title;    @Column(columnDefinition = "LONGTEXT")    private String content;    @Column(length = 10, nullable = false)    private String flag;    @Column(columnDefinition = "TEXT")    private String tag;    @Column(length = 100, nullable = false)    private String reguserEmail;    @CreationTimestamp    private LocalDateTime regdateTime;    @CreationTimestamp    private LocalDateTime regUpdateTime;    @Column(length = 11, nullable = true)    private int commentCount;    @CreationTimestamp    private LocalDateTime commentUpdatedTime;    @Column(length = 11, nullable = true)    private int hit;    @Column(length = 11, nullable = true)    private int likeCount;    @Column(columnDefinition = "TEXT")    private String share;    @Column(length = 100, nullable = true)    private String regiIp;    @Column(length = 10, nullable = true)    private String ynDel;    @Column(length = 11, nullable = true)    private int fileCount;    @Column(length = 10, nullable = true)    private String regtype;    @Column(length = 10, nullable = true)    private String ynFix;    @Column(length = 10, nullable = true)    private Boolean statelike;    @Column(length = 100, nullable = true)    private String eventStDate;    @Column(length = 100, nullable = true)    private String eventEdDate;    @Builder    @JsonCreator    public Board(@JsonProperty("memid") Long memid, @JsonProperty("userid") String userid,                 @JsonProperty("nickname") String nickname, @JsonProperty("reply") int reply,                 @JsonProperty("title") String title, @JsonProperty("content") String content,                 @JsonProperty("flag") String flag, @JsonProperty("tag") String tag,                 @JsonProperty("reguserEmail") String reguserEmail, @JsonProperty("regdateTime") LocalDateTime regdateTime,                 @JsonProperty("regUpdateTime") LocalDateTime regUpdateTime, @JsonProperty("commentCount") int commentCount,                 @JsonProperty("commentUpdatedTime") LocalDateTime commentUpdatedTime, @JsonProperty("hit") int hit,                 @JsonProperty("likeCount") int likeCount, @JsonProperty("share") String share,@JsonProperty("regtype") String regtype,                 @JsonProperty("regiIp") String regiIp, @JsonProperty("ynDel") String ynDel, @JsonProperty("fileCount") int fileCount,                 @JsonProperty("ynFix") String ynFix,  @JsonProperty("statelike") Boolean statelike ,@JsonProperty("eventStDate") String eventStDate,                 @JsonProperty("eventEdDate") String eventEdDate ) {        this.memid = memid;        this.userid = userid;        this.nickname = nickname;        this.reply = 0;        this.title = title;        this.content = content;        this.flag = flag;        this.tag = tag;        this.reguserEmail = reguserEmail;        this.regdateTime = regdateTime;        this.regUpdateTime = regUpdateTime;        this.commentCount = 0;        this.commentUpdatedTime = commentUpdatedTime;        this.hit = 0;        this.likeCount = 0;        this.share = share;        this.regiIp = regiIp;        this.ynDel = "N";        this.fileCount = 0;        this.regtype = regtype;        this.ynFix = ynFix;        this.statelike = false;        this.eventStDate = eventStDate;        this.eventEdDate = eventEdDate;    }}