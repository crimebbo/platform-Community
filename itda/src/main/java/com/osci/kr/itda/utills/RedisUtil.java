package com.osci.kr.itda.utills;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.data.redis.core.StringRedisTemplate;import org.springframework.data.redis.core.ValueOperations;import org.springframework.stereotype.Service;import java.time.Duration;import java.util.concurrent.TimeUnit;@Servicepublic class RedisUtil {    @Autowired    RedisTemplate<String, Object> redisTemplate;    public Object getData(String key){        ValueOperations<String,Object> valueOperations = redisTemplate.opsForValue();        return valueOperations.get(key);    }    public String getStrData(String key){        ValueOperations<String,Object> valueOperations = redisTemplate.opsForValue();        return (String) valueOperations.get(key);    }    public void setData(String key, String value){        ValueOperations<String,Object> valueOperations = redisTemplate.opsForValue();        valueOperations.set(key,value);    }    public void setDataExpire(String key,String value,long duration){        ValueOperations<String,Object> valueOperations = redisTemplate.opsForValue();        Duration expireDuration = Duration.ofSeconds(duration);        valueOperations.set(key,value,expireDuration);    }    public void deleteData(String key){        redisTemplate.delete(key);    }    public void setLogoutData(String accessToken){        redisTemplate.opsForValue().set(accessToken, true);        redisTemplate.expire(accessToken, 60 * 60 * 1000L, TimeUnit.MILLISECONDS);    }}